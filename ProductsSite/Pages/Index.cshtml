@page
@using Microsoft.EntityFrameworkCore
@model IndexModel
@inject ProductsSiteContext _context
@inject IProductsRepository _productsRepository

<link rel="stylesheet" href="css/mainPage.css" asp-append-version="true">
<link rel="stylesheet" href="css/ProductInd.css" asp-append-version="true"/>
@{
    ViewData["Title"] = "EnixShop";
}
@{
    var search = (string?)ViewData["search"];
    var productType = (string?)ViewData["productType"];
    var productTypes = _context.Product.AsNoTracking()
        .Select(x => x.CategoryId)
        .OrderBy(x => x)
        .Distinct()
        .Select(x => new SelectListItem(x, x, x == productType))
        .ToList();
}
<div class="main-page">
    <div class="row">
        <div class="col-md-3 shadow p-0">
            <div class="category-menu">

                <h4 class="title-block">
                    <i class="bi bi-list"></i>
                    Категории
                </h4>
                <ul class="categories-list mb-0">
                    @foreach (var element in productTypes)
                    {
                        <li>
                            <a class="category-link" asp-page="/Products/ProductIndex" asp-route-productType="@element.Value">
                                <i class="bi bi-box"></i>
                                @element.Text
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-9">
            <div class="news shadow">
                <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-indicators">
                        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
                    </div>
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="pics/slide1.png" class="d-block w-100" alt="...">
                            <div class="carousel-caption d-none d-md-block">
                                <h5>First slide label</h5>
                                <p>Some representative placeholder content for the first slide.</p>
                            </div>
                        </div>
                        <div class="carousel-item">
                            <img src="pics/slide2.png" class="d-block w-100" alt="...">
                            <div class="carousel-caption d-none d-md-block">
                                <h5>Second slide label</h5>
                                <p>Some representative placeholder content for the second slide.</p>
                            </div>
                        </div>
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
            <div class="hot-products shadow p-0">
                <div class="title-block mt-2">
                    <span>Популярные товары</span>
                </div>
                @{
                    var product = (string?)ViewData["IsHotDeal"];
                    var products = _context.Product.AsNoTracking()
                        .Where(product => product.IsHotDeal == true)
                        .OrderBy(product => product.Id)
                        .Distinct()
                        .ToList();
                }
                <div class="row row-cols-2 row-cols-md-3 row-cols-lg-4 justify-content-around">
                    @{
                        foreach (var item in products)
                        {
                            var priceOut = ((decimal)item.Price / 100.0m).ToString("0.00");
                            <div>
                                <div class="card mb-3">
                                    <div class="wrapper card-picture position-relative">
                                        <div class="picture-block">
                                            <div class="d-block justify-content-center">
                                                <img class="img-fluid align-items-lg-center" src="@_productsRepository.GetPic(item)" alt="Card image cap"/>
                                            </div>
                                        </div>
                                        <div class="btns">
                                            <div class="wishlist container-fluid">
                                                <i class="bi bi-heart"
                                                   onclick="window.test1(this);">
                                                </i>
                                            </div>
                                            <div class="cart">
                                                <i class="bi bi-heart"
                                                   onclick="window.test1(this);">
                                                </i>
                                            </div>
                                            <div class="info">
                                                <i class="bi bi-heart"
                                                   onclick="window.test1(this);">
                                                </i>
                                            </div>
                                        </div>
                                        @if (User.Identity.IsAuthenticated)
                                        {
                                            <div class="settings">
                                                <a asp-page="/Products/ProductPictureEdit" asp-route-id="@item.Id">
                                                    <i class="bi bi-image"></i>
                                                </a>
                                            </div>
                                            <div class="text-start position-absolute top-0">
                                                <a asp-page="/Products/ProductEdit" asp-route-id="@item.Id">
                                                    <i class="bi bi-gear-fill"></i>
                                                </a>
                                            </div>
                                        }
                                    </div>
                                    <div class="card-body">
                                        <div class="text1 text-center">
                                            <a asp-page="/Products/ProductDetails" asp-route-id="@item.Id">@item.ProductName</a>
                                        </div>
                                        <div class="text-center">
                                            @if (item.IsDiscount)
                                            {
                                                <p class="card-text">@priceOut ₽</p>
                                                var priceOutQ = ((decimal)item.Price * 100 / item.DiscountPercent / 100.0m);
                                                <p class="card-text">@priceOutQ ₽</p>
                                            }
                                            else
                                            {
                                                <p class="card-text">@priceOut ₽</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                                </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

</div>